

ssh.settings {
	knownHosts = allowAnyHosts
}

remotes {
	localhost {
		role 'docs'
		host = 'docs.af.pivotal.io'
	}
}

task prepareDeploy(dependsOn: 'docsZip') {
	doFirst {
		deploy.inputs.files project.tasks.docsZip.outputs
		project.remotes {
			localhost {
				user = project.ext['SSH_USERNAME']
				identity = file(project.ext['SSH_KEY'])
				passphrase = project.ext['SSH_PASSPHRASE']
			}
		}
	}
}

task deploy(dependsOn: prepareDeploy) {
	doFirst {
		ssh.run {
			session(remotes.localhost) {
				def now = System.currentTimeMillis()
				def name = rootProject.name
				def version = rootProject.version
				def tempPath = "/tmp/${name}-${now}-docs/".replaceAll(' ', '_')
				execute "mkdir -p $tempPath"

				project.tasks.docsZip.outputs.each { o ->
					put from: o.files, into: tempPath
				}

				execute "unzip $tempPath*.zip -d $tempPath"

				def extractPath = "/var/www/domains/springsource.org/www/htdocs/autorepo/docs/${name}/${version}/"

				execute "mkdir -p $extractPath"
				execute "mv $tempPath/docs/* $extractPath"
			}
		}
	}
}